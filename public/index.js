/* global PIXI */
/// <reference types="pixi.js" />

function getRandom(min, max) {
    return Math.random() * (max - min) + min;
}

let app = new PIXI.Application(),
    loader = PIXI.loader,
    resources = PIXI.loader.resources,
    Sprite = PIXI.Sprite;

// add canvas to the HTML generated by PIXI
document.body.appendChild(app.view);

const bg = PIXI.Texture.fromImage("sprites/bgtest.png");
const background = new PIXI.extras.TilingSprite(bg, 800, 600);
app.stage.addChild(background);

app.ticker.add(() => {
    // background.tileScale.set(0.6);
    background.tilePosition.x -= 2;
});

const initialPositionX = 50;
const floor = 550;
const jumpDelay = 500;
const jumpHeight = 90;
const playerHeight = 144;

const obstacleHeight = 84;
const obstacleSpeed = 8;

// clouds
const clouds = PIXI.Sprite.fromImage("sprites/clouds.png");
clouds.position.set(900, 50);
app.stage.addChild(clouds);

app.ticker.add(() => {
    clouds.position.x -= 0.3;

    if (clouds.position.x < -400) {
        clouds.position.x = 1000;
    }
});

// background triceratops
const triceratops = PIXI.Sprite.fromImage("sprites/triceratops.png");
triceratops.position.set(900, floor - 55);
triceratops.scale.set(0.5, 0.5);

app.ticker.add(() => {
    triceratops.position.x -= 1;

    if (triceratops.position.x < -600) {
        triceratops.position.x = 1000;
    }
});
app.stage.addChild(triceratops);

// player
const player = PIXI.Texture.fromImage("sprites/dinotest.png");
const playerDown = PIXI.Texture.fromImage("sprites/brachiosaurus-down.png");
const brachiosaurus = new PIXI.Sprite(player);

brachiosaurus.position.set(initialPositionX, floor - playerHeight);
app.stage.addChild(brachiosaurus);

let jumpTimeout;
let duckTimeout;
window.addEventListener("keydown", event => {
    if (event.keyCode === 38) {
        if (brachiosaurus.position.y > 226) {
            brachiosaurus.position.y -= jumpHeight;
            if (jumpTimeout) {
                clearTimeout(jumpTimeout);
            }
            jumpTimeout = setTimeout(() => {
                brachiosaurus.position.y = floor - playerHeight;
            }, jumpDelay);
        }
    }

    if (event.keyCode === 40) {
        brachiosaurus.texture = playerDown;
        if (duckTimeout) {
            return;
        }
        duckTimeout = setTimeout(() => {
            brachiosaurus.texture = player;
            brachiosaurus.position.y = floor - playerHeight;
            duckTimeout = null;
        }, jumpDelay);
    }
});

// obstacles
const obstacle1 = PIXI.Sprite.fromImage("sprites/velociraptor1.png");
obstacle1.position.set(1000, floor - obstacleHeight);

app.ticker.add(() => {
    const min = 1400;
    const max = 1800;
    let randomPosition = getRandom(min, max);

    obstacle1.position.x -= obstacleSpeed;

    if (obstacle1.position.x < -200) {
        obstacle1.position.x = randomPosition;
    }
});
app.stage.addChild(obstacle1);

const obstacle2 = PIXI.Sprite.fromImage("sprites/velociraptor2.png");
obstacle2.position.set(1400, floor - obstacleHeight);

app.ticker.add(() => {
    const min = 1800;
    const max = 2000;
    let randomPosition = getRandom(min, max);

    obstacle2.position.x -= obstacleSpeed;

    if (obstacle2.position.x < -800) {
        obstacle2.position.x = randomPosition;
    }
});
app.stage.addChild(obstacle2);

const obstacle3 = PIXI.Sprite.fromImage("sprites/pterodactylus.png");
obstacle3.position.set(2500, floor - 120);

app.ticker.add(() => {
    obstacle3.position.x -= obstacleSpeed;

    if (obstacle3.position.x < -1500) {
        obstacle3.position.x = 2000;
    }
});
app.stage.addChild(obstacle3);
